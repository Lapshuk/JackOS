// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/* 
 Chapter No. 12 â€“ Project No.12 

 Programmer: Roman Lapshuk 

 Date Last Modified: May 6, 2015

*/

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

  /** Initializes the keyboard. */
  function void init() {
    return;
  }

  /**
   * Returns the ASCII code (as char) of the currently pressed key,
   * or 0 if no key is currently pressed.
   * Recognizes all ASCII characters, as well as the following extension
   * of action keys:
   * New line = 128 = String.newline()
   * Backspace = 129 = String.backspace()
   * Left Arrow = 130
   * Up Arrow = 131
   * Right Arrow = 132
   * Down Arrow = 133
   * Home = 134
   * End = 135
   * Page Up = 136
   * Page Down = 137
   * Insert = 138
   * Delete = 139
   * ESC = 140
   * F1 - F12 = 141 - 152
   */
  function char keyPressed() {
    return Memory.peek(24576);
  }

  /**
   * Reads the next character from the keyboard.
   * waits until a key is pressed and then released, then echoes
   * the key to the screen, and returns the value of the pressed key.
   */
  function char readChar() {
    var char key, pressedKey;

    //loop until the key is pressed
    while (key = 0) {
      let key = Keyboard.keyPressed();
    }

    let pressedKey = key;

    //wait for key to be released
    while (~(key = 0)) {
      let key = Keyboard.keyPressed();
    }
    //echo
    do Output.printChar(pressedKey);

    return pressedKey;
  }

  /**
   * Prints the message on the screen, reads the next line
   * (until a newline character) from the keyboard, and returns its value.
   */
  function String readLine(String message) {
    var String input;
    var char key, pressedKey;

    let input = String.new(63);

    do Output.printString(message);

    while (true) {

      let pressedKey = Keyboard.keyPressed();
      //check if pressed key was a new line char
      if (pressedKey = 128) {
        do Output.println();
        return input;
      } else {
        //check if pressed key was a back space char
        if (pressedKey = 129) {
          if (input.length() > 0) {
            do Output.backSpace();
            do input.eraseLastChar();
          }
        } else {
          //echo  to screen
          do Output.printChar(pressedKey);
          //append to string
          do input.appendChar(pressedKey);
        }
      }
    }

    return input;
  }

  /**
   * Prints the message on the screen, reads the next line
   * (until a newline character) from the keyboard, and returns its
   * integer value (until the first non numeric character).
   */
  function int readInt(String message) {
    var String input;
    let input = Keyboard.readLine(message);
    return input.intValue();
  }
}
